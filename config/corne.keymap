/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        dot {
            bindings = <&kp PERIOD>;
            key-positions = <16 19>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <15 20>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        left_square {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <28 29>;
        };

        left_curly {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <4 5>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        right_square {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        right_curly {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <6 7>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <20 21>;
        };

        double_quotes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <17 18>;
        };

        single_quotes {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <29 30>;
        };

        tick {
            bindings = <&kp GRAVE>;
            key-positions = <5 6>;
        };

        forward_slash {
            bindings = <&kp SLASH>;
            key-positions = <18 7>;
        };

        back_slash {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 4>;
        };

        less_than {
            bindings = <&kp LESS_THAN>;
            key-positions = <16 29>;
        };

        more_than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <30 19>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <15 16>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <27 28>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <31 32>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <3 4>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <7 8>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 32>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <8 6>;
        };

        amp {
            bindings = <&kp LS(AMPERSAND)>;
            key-positions = <3 5>;
        };

        percent {
            bindings = <&kp LS(PERCENT)>;
            key-positions = <15 17>;
        };

        poud {
            bindings = <&kp POUND>;
            key-positions = <3 8>;
        };

        smicolon {
            bindings = <&kp SEMI>;
            key-positions = <18 20>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <27 29>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <32 27>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <2 9>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <14 21>;
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E      &kp R                 &kp T                       &kp Y                      &kp U                  &kp I  &kp O  &kp P          &none
&none  &kp A  &kp S  &kp D      &kp F                 &kp G                       &kp H                      &kp J                  &kp K  &kp L  &kp BACKSPACE  &none
&none  &none  &kp Z  &kp X      &hold_tap LEFT_ALT C  &hold_tap LEFT_CONTROL V    &hold_tap RIGHT_CONTROL B  &hold_tap RIGHT_ALT N  &kp M  &none  &none          &none
                     &lt 3 TAB  &kp LEFT_GUI          &kp LEFT_SHIFT              &kp SPACE                  &kp ENTER              &mo 2
            >;
        };

        layer_1 {
            bindings = <
&none  &kp AT_SIGN    &kp EXCLAMATION  &kp LEFT_BRACKET  &kp LEFT_BRACE     &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp RIGHT_BRACKET  &kp GRAVE  &kp HASH       &none
&none  &kp PERCENT    &kp SEMICOLON    &kp BACKSLASH     &kp DOUBLE_QUOTES  &kp COMMA               &kp DOT                &kp SINGLE_QUOTE  &kp SLASH          &kp COLON  &kp BACKSPACE  &none
&none  &kp AMPERSAND  &kp UNDERSCORE   &kp LESS_THAN     &kp STAR           &kp PLUS                &kp MINUS              &kp DOLLAR        &kp GREATER_THAN   &kp PIPE   &none          &none
                                       &none             &none              &none                   &none                  &none             &mo 2
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &kp F1  &kp F2  &kp F3  &kp F4    &kp F7  &kp F8   &kp F9   &kp F10  &none          &none
&none  &none  &kp N1  &kp N2  &kp N3  &kp N4    &kp N6  &kp N7   &kp N8   &kp N9   &kp BACKSPACE  &none
&none  &none  &none   &kp F5  &kp F6  &kp N5    &kp N0  &kp F11  &kp F12  &none    &none          &none
                      &mo 1   &none   &none     &none   &none    &none
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &none   &none   &none   &none     &none     &none           &none         &none      &trans  &trans
&trans  &trans  &none   &none   &none   &none     &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans          &trans        &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
