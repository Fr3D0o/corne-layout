/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E                 &kp R                 &kp T                       &kp Y                      &kp U                  &kp I                  &kp O  &kp P          &none
&none  &kp A  &kp S  &kp D                 &kp F                 &kp G                       &kp H                      &kp J                  &kp K                  &kp L  &kp BACKSPACE  &none
&none  &none  &kp Z  &hold_tap LEFT_GUI X  &hold_tap LEFT_ALT C  &hold_tap LEFT_CONTROL V    &hold_tap RIGHT_CONTROL B  &hold_tap RIGHT_ALT N  &hold_tap RIGHT_GUI M  &none  &none          &none
                     &mo 1                 &kp TAB               &kp LEFT_SHIFT              &kp SPACE                  &kp ENTER              &mo 2
            >;
        };

        layer_1 {
            bindings = <
&none  &kp AT_SIGN    &kp EXCLAMATION  &kp LEFT_BRACKET  &kp LEFT_BRACE     &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE   &kp RIGHT_BRACKET  &kp GRAVE  &kp HASH       &none
&none  &kp PERCENT    &kp SEMICOLON    &kp BACKSLASH     &kp DOUBLE_QUOTES  &kp COMMA               &kp DOT                &kp SINGLE_QUOTE  &kp SLASH          &kp COLON  &kp BACKSPACE  &none
&none  &kp AMPERSAND  &kp UNDERSCORE   &kp LESS_THAN     &kp STAR           &kp PLUS                &kp MINUS              &kp DOLLAR        &kp GREATER_THAN   &kp PIPE   &none          &none
                                       &mo 1             &none              &none                   &none                  &none             &none
            >;
        };

        layer_2 {
            bindings = <
&none  &none  &none   &none   &none   &none     &none   &none   &none   &none   &none          &none
&none  &none  &kp N1  &kp N2  &kp N3  &kp N4    &kp N6  &kp N7  &kp N8  &kp N9  &kp BACKSPACE  &none
&none  &none  &none   &none   &none   &kp N5    &kp N0  &none   &none   &none   &none          &none
                      &none   &none   &none     &none   &none   &mo 2
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &kp F1   &kp F2   &kp F3   &kp F4    &kp F6    &kp F7          &kp F8        &kp F9     &trans  &trans
&trans  &trans  &kp F10  &kp F11  &kp F12  &kp F5    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans   &trans   &trans   &trans    &trans    &trans          &trans        &trans     &trans  &trans
                         &trans   &trans   &trans    &trans    &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
